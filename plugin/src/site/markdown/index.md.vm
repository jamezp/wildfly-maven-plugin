
# ${project.name} (${project.artifactId})

  The ${project.artifactId} is used to provision a server or Bootable JAR (an executable fat JAR) using Galleon, package your application in Galleon provisioned server, 
  deploy, redeploy, undeploy or run your application. You can also deploy or undeploy
  artifacts, such as JDBC drivers, and add or remove resources. There is also the ability to execute CLI commands.

#[[##]]# Goals Overview

  General information about the goals.

  * [${pluginPrefix}:add-resource](./add-resource-mojo.html) adds a resource.

  * [${pluginPrefix}:deploy](./deploy-mojo.html) deploys the application to the application server.

  * [${pluginPrefix}:deploy-only](./deploy-only-mojo.html) deploys the application to application server invoking no other goals by default.

  * [${pluginPrefix}:deploy-artifact](./deploy-artifact-mojo.html) deploys an arbitrary artifact to the server.

  * [${pluginPrefix}:package](./package-mojo.html) produces a fully configured server installation or Bootable JAR using Galleon and WildFly CLI that contains your application.

  * [${pluginPrefix}:provision](./provision-mojo.html) produces a server installation using Galleon.

  * [${pluginPrefix}:image](./image-mojo.html) build (and push) a container image to run your application on the cloud.

  * [${pluginPrefix}:redeploy](./redeploy-mojo.html) redeploys the application.

  * [${pluginPrefix}:redeploy-only](./redeploy-only-mojo.html) redeploys the application invoking no other goals by default.

  * [${pluginPrefix}:undeploy](./undeploy-mojo.html) undeploys the application.

  * [${pluginPrefix}:dev](./dev-mojo.html) runs the application server, if applicable, and deploys your application watching for source changes.

  * [${pluginPrefix}:run](./run-mojo.html) runs the application server and deploys your application.

  * [${pluginPrefix}:start](./start-mojo.html) starts the application server and leaves the process running. In most cases
    the [shutdown goal](./shutdown-mojo.html) be executed to ensure the server is shutdown.

  * [${pluginPrefix}:start-jar](./start-jar-mojo.html) starts the Bootable JAR and leaves the process running. In most cases
    the [shutdown goal](./shutdown-mojo.html) be executed to ensure the server is shutdown.

  * [${pluginPrefix}:shutdown](./shutdown-mojo.html) shuts down a running application server.

  * [${pluginPrefix}:execute-commands](./execute-commands-mojo.html) executes commands on the running server.

#[[##]]# Usage

General instructions on how to use the ${project.name} can be found on the [usage page](./usage.html). Some more
specific use cases are described in the examples given below.

In case you still have questions regarding the plugin's usage, please have a look at the [FAQ](./faq.html) and feel
free to contact the [user mailing list](./mailing-lists.html). The posts to the mailing list are archived and could
already contain the answer to your question as part of an older thread. Hence, it is also worth browsing/searching
the [mail archive](./mailing-lists.html).

If you feel like the plugin is missing a feature or has a defect, you can fill a feature request or bug report in our
[issue tracker](./issue-management.html). When creating a new issue, please provide a comprehensive description of your
concern. Especially for fixing bugs it is crucial that the developers can reproduce your problem. For this reason,
entire debug logs, POMs or most preferably little demo projects attached to the issue are very much appreciated.
Of course, patches are welcome, too. Contributors can check out the project from our
[source repository](./scm.html) and will find supplementary information in the
[guide to helping with Maven](http://maven.apache.org/guides/development/guide-helping.html).

#[[##]]# WildFly Glow
The WildFly Maven plugin uses WildFly Glow to generate provisioning configuration. For more information on WildFly Glow
you see the [documentation](https://docs.wildfly.org/wildfly-glow/).

#[[##]]# Examples

  To provide you with better understanding of some usages of the ${project.name}, you can take a look into the
  following example:

  * [Deployment Example](./deployment-example.html)

  * [Channel Example](./channel-example.html)

  * [Adding Resources Example](./add-resource-example.html)

  * [Complex Examples](./complex-example.html)

  * [Execute Commands Example](./execute-commands-example.html)

  * [Dev Example](./dev-example.html)

  * [Run Example](./run-example.html)

  * [Packaging the application and server Example](./package-example.html)

  * [Provisioning a server Example](./provision-example.html)

  * [Building (and pushing) an application image Example](./image-example.html)
